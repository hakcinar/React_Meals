{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akcinar Ailesi\\\\Documents\\\\Baslangic\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CartContext from './cart-contex';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmaount: 0\n};\n\nconst CartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItem = state.items.concat(action.item);\n    }\n\n    const updatedTotalAmount = state.totalAmaount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmaount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\n_c = CartReducer;\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(CartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {};\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmaount: cartState.totalAmaount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c2 = CartProvider;\nexport default CartProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartReducer\");\n$RefreshReg$(_c2, \"CartProvider\");","map":{"version":3,"names":["React","CartContext","useReducer","defaultCartState","items","totalAmaount","CartReducer","state","action","type","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","amount","concat","updatedTotalAmount","price","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["C:/Users/Akcinar Ailesi/Documents/Baslangic/src/store/CartProvider.js"],"sourcesContent":["import React from 'react'\r\nimport CartContext from './cart-contex'\r\nimport { useReducer } from 'react';\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmaount: 0\r\n}\r\nconst CartReducer = (state, action) => {\r\n    if(action.type==='ADD'){\r\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n        let updatedItems;\r\n        if(existingCartItem){\r\n          const  updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount + action.item.amount\r\n            };\r\n            updatedItems = [...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        }\r\n        else{\r\n            updatedItem = state.items.concat(action.item);\r\n        }\r\n        const updatedTotalAmount = state.totalAmaount + action.item.price*action.item.amount\r\n        return{\r\n            items : updatedItems,\r\n            totalAmaount : updatedTotalAmount\r\n        };\r\n    }\r\n    return defaultCartState\r\n}\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(CartReducer, defaultCartState)\r\n    const addItemToCartHandler = item => {\r\n        dispatchCartAction({ type: 'ADD',item:item })\r\n    };\r\n    const removeItemFromCartHandler = id => { };\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmaount: cartState.totalAmaount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler\r\n    }\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,EADc;EAErBC,YAAY,EAAE;AAFO,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACnC,IAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EAAuB;IACnB,MAAMC,qBAAqB,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CAAsBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACI,IAAP,CAAYC,EAAtD,CAA9B;IACA,MAAMC,gBAAgB,GAAGP,KAAK,CAACH,KAAN,CAAYM,qBAAZ,CAAzB;IACA,IAAIK,YAAJ;;IACA,IAAGD,gBAAH,EAAoB;MAClB,MAAOE,WAAW,GAAG,EACf,GAAGF,gBADY;QAEfG,MAAM,EAAEH,gBAAgB,CAACG,MAAjB,GAA0BT,MAAM,CAACI,IAAP,CAAYK;MAF/B,CAArB;MAIEF,YAAY,GAAG,CAAC,GAAGR,KAAK,CAACH,KAAV,CAAf;MACAW,YAAY,CAACL,qBAAD,CAAZ,GAAsCM,WAAtC;IACH,CAPD,MAQI;MACAA,WAAW,GAAGT,KAAK,CAACH,KAAN,CAAYc,MAAZ,CAAmBV,MAAM,CAACI,IAA1B,CAAd;IACH;;IACD,MAAMO,kBAAkB,GAAGZ,KAAK,CAACF,YAAN,GAAqBG,MAAM,CAACI,IAAP,CAAYQ,KAAZ,GAAkBZ,MAAM,CAACI,IAAP,CAAYK,MAA9E;IACA,OAAM;MACFb,KAAK,EAAGW,YADN;MAEFV,YAAY,EAAGc;IAFb,CAAN;EAIH;;EACD,OAAOhB,gBAAP;AACH,CAvBD;;KAAMG,W;;AAwBN,MAAMe,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC5B,MAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCtB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAAlD;;EACA,MAAMsB,oBAAoB,GAAGb,IAAI,IAAI;IACjCY,kBAAkB,CAAC;MAAEf,IAAI,EAAE,KAAR;MAAcG,IAAI,EAACA;IAAnB,CAAD,CAAlB;EACH,CAFD;;EAGA,MAAMc,yBAAyB,GAAGb,EAAE,IAAI,CAAG,CAA3C;;EACA,MAAMc,WAAW,GAAG;IAChBvB,KAAK,EAAEmB,SAAS,CAACnB,KADD;IAEhBC,YAAY,EAAEkB,SAAS,CAAClB,YAFR;IAGhBuB,OAAO,EAAEH,oBAHO;IAIhBI,UAAU,EAAEH;EAJI,CAApB;EAMA,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEC,WAA7B;IAAA,UACKL,KAAK,CAACQ;EADX;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAjBD;;GAAMT,Y;;MAAAA,Y;AAmBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}